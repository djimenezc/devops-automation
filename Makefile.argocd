.PHONY: argocd-app-get

ARGO_DEMO_APP_NAME ?= guestbook
ARGO_DEMO_APPS= guestbook ksonnet-guestbook helm-guestbook jsonnet-guestbook jsonnet-guestbook-tla kustomize-guestbook ksane pre-post-sync sync-waves helm-dependency sock-shop plugins blue-green apps

APP_NAME ?= cronjob-operator
REPO_URL ?=
PATH ?=
DEST_NAMESPACE ?= argocd
DEST_SERVER ?= https://kubernetes.default.svc
APP_BRANCH ?= main
APP_PROJECT ?=

#https://argo-cd.readthedocs.io/en/stable/getting_started/
argocd-install:
	-kubectl create namespace argocd
	kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
	kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj-labs/argocd-image-updater/stable/manifests/install.yaml

argocd-delete:
	kubectl delete -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
	kubectl delete namespace argocd

argocd-make-public:
	kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

argocd-port-forwarding:
	kubectl port-forward svc/argocd-server -n argocd 8085:443

argocd-get-admin-password:
	kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo

# APPS https://github.com/argoproj/argocd-example-apps

argocd-apps-create-namespace:
	-kubectl create namespace argocd-apps

#https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/
argocd-ingress-apply:
	kubectl apply -f ./ingress/argocd-nginx-ingress.yml

#https://argo-cd.readthedocs.io/en/stable/getting_started/
argocd-login:
	argocd login --skip-test-tls --grpc-web --username admin \
	--insecure \
	--password $(shell kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d;echo) \
	 localhost:8085

argocd-install-tools:
	brew install argocd
	brew install argocd-autopilot

argocd-add-cluster:
	argocd cluster add $(shell kubectl config current-context) --insecure -y

argocd-app-deploy:
	@echo deploying appName: $(APP_NAME)
	argocd app create $(APP_NAME) \
  	--repo $(REPO_URL) \
  	--path $(PATH) \
  	--dest-namespace $(DEST_NAMESPACE) \
  	--dest-server $(DEST_SERVER) \
  	--auto-prune --self-heal --sync-policy automated \
  	--sync-option CreateNamespace=true \
  	--sync-option ServerSideApply=true \
  	--sync-option PruneLast=true \
  	--sync-option PrunePropagationPolicy=foreground \
  	--sync-option Validate=true \
  	--sync-option RespectIgnoreDifferences=true \
  	--revision $(APP_BRANCH) \
  	--upsert

argocd-app-get:
	@echo Getting appName: $(ARGO_DEMO_APP_NAME)
	argocd app get ${ARGO_DEMO_APP_NAME}

argocd-app-sync:
	@echo Syncing appName: $(ARGO_DEMO_APP_NAME)
	argocd app sync ${ARGO_DEMO_APP_NAME}

argocd-app-delete:
	@echo Deleting appName: $(ARGO_DEMO_APP_NAME)
	argocd app delete ${ARGO_DEMO_APP_NAME}

sealed-secrets-controller-install:
	helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
	helm repo update
	helm install sealed-secrets-controller sealed-secrets/sealed-secrets
