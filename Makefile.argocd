.PHONY: k8s-argocd-app-get

#https://argo-cd.readthedocs.io/en/stable/getting_started/
k8s-argocd-install:
	kubectl create namespace argocd
	kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

k8s-argocd-delete:
	kubectl delete -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
	kubectl delete namespace argocd

k8s-argocd-make-public:
	kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

k8s-argocd-port-forwarding:
	kubectl port-forward svc/argocd-server -n argocd 8085:443

k8s-argocd-get-admin-password:
	kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo

# APPS https://github.com/argoproj/argocd-example-apps

k8s-argocd-apps-create-namespace:
	-kubectl create namespace argocd-apps


k8s-argocd-app-deploy: k8s-argocd-apps-create-namespace
	@echo deploying appName: $(ARGO_DEMO_APP_NAME)
	argocd app create $(ARGO_DEMO_APP_NAME) --repo https://github.com/djimenezc/argocd-example-apps.git --path $(ARGO_DEMO_APP_NAME) --dest-server https://kubernetes.default.svc --dest-namespace argocd-apps

k8s-argocd-app-get:
	@echo Getting appName: $(ARGO_DEMO_APP_NAME)
	argocd app get ${ARGO_DEMO_APP_NAME}

k8s-argocd-app-sync:
	@echo Syncing appName: $(ARGO_DEMO_APP_NAME)
	argocd app sync ${ARGO_DEMO_APP_NAME}

k8s-argocd-app-delete:
	@echo Deleting appName: $(ARGO_DEMO_APP_NAME)
	argocd app delete ${ARGO_DEMO_APP_NAME}